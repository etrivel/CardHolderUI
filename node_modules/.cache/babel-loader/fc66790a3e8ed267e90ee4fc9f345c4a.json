{"ast":null,"code":"var _jsxFileName = \"C:\\\\office work\\\\FIS\\\\FIS New\\\\CardHolderUI\\\\src\\\\screens\\\\login\\\\forgot_passwod.js\";\nimport React from \"react\";\nimport { Button, Grid, Typography, TextField, Checkbox, FormControlLabel, Dialog, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./style\";\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass Forgetpassword extends React.Component {\n  // state\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.state = {\n      open: false,\n      data: [\"Have 15 or more characters.\", \"Contain three of the following four types:\", \"English uppercase character(A - Z)\", \"English lowercase character(a - z)\", \"Numeric(0 - 9)\", \"Special character(!, ., ;, $, #, @)\", \"Not contain your user name(employee id) or your first or last name.\"],\n      data2: [\"Select a phrase that's easy for you to remember, and then add complexity by using spaces, numbers\", \"and/or special characters.\", \"Leverage dictionary words (except for words used in common passwords, like 'password').\", \"Consider misspelling words to add complexity (for example, kidz for kids).\", \"Avoid adjacent keyboard characters, like 'qwerty'.\", \"Avoid using personal details, such as your social security number or birthdate.\", \"Don't use your FNFIS password for other applications and websites, including consumer sites.\", \"Examples (Do not use these as they are known by all employees):\"]\n    };\n  }\n\n  // end\n  render() {\n    const {\n      classes,\n      handlechange\n    } = this.props;\n    const {\n      open,\n      data,\n      data2\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.formHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      className: classes.mainHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Problems Signing in to your account \", /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 58\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/assets/information.svg\",\n      alt: \"fis logo\",\n      width: \"20px\",\n      style: {\n        marginBottom: \"-1px\",\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 100\n      }\n    })))), /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: () => this.handleClose(),\n      className: classes.dialogmain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      className: classes.dialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Password Policy \", /*#__PURE__*/React.createElement(CloseIcon, {\n      style: {\n        color: \"#0000007A\",\n        cursor: \"pointer\"\n      },\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(DialogContent, {\n      className: classes.det,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.titledetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Rules - Your password must:\"), data.map(v => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: classes.li,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 36\n        }\n      }, v);\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.titledetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Guidance - Use a complex yet practicable password:\"), data2.map(v => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: classes.li,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 36\n        }\n      }, v);\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"My Kidz Like 2 Swim\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"@IloveAlaska-intheSummer\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Why would u do that!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"If you have any questions or issues, you may contact Employee Support at: http://employeesupport.fnfis.com\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.titledetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"For assistance:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"FIS Employees - Employee Support: 800.448.8625 (US); 856.470.2445 (Outside the US)\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.submit,\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 10,\n      lg: 10,\n      xl: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      className: classes.for_newuser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, \"Please select your issue : \"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: classes.for_checkbox,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: true //   checked={this.state.isChecked}\n        //     onChange={this.handleRememberPassword}\n        ,\n        name: \"forgot_password\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 41\n        }\n      }),\n      label: \"I forgot my password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: classes.for_checkbox,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"login_id\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 41\n        }\n      }),\n      label: \"I forgot my login ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      className: classes.for_checkbox,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"account\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }\n      }),\n      label: \"I think my account is locked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      className: classes.userHelpGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      component: \"div\",\n      className: `${classes.for_newuser} ${classes.for_resetuser}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, \"To reset your password, enter your user email address, username or alias.\")), /*#__PURE__*/React.createElement(TextField, {\n      className: classes.formInputs //   error\n      //   helperText=\"Incorrect entry.\"\n      ,\n      label: \"Enter your username, email ID or alias\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      className: classes.proceedButton,\n      onClick: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, \"Proceed\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      disableElevation: true,\n      className: classes.backButton,\n      onClick: () => handlechange(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, \"Back to Sign in\")))));\n  }\n\n}\n\nexport default withStyles(styles)(withRouter(Forgetpassword));","map":{"version":3,"sources":["C:/office work/FIS/FIS New/CardHolderUI/src/screens/login/forgot_passwod.js"],"names":["React","Button","Grid","Typography","TextField","Checkbox","FormControlLabel","Dialog","DialogTitle","DialogContent","withRouter","withStyles","styles","CloseIcon","Forgetpassword","Component","constructor","props","handleClose","setState","open","state","data","data2","render","classes","handlechange","formHeader","mainHeading","marginBottom","cursor","dialogmain","dialog","color","det","titledetails","map","v","li","para","submit","form","for_newuser","for_checkbox","userHelpGrid","for_resetuser","formInputs","proceedButton","handleLogin","backButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n    TextField,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { styles } from \"./style\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nclass Forgetpassword extends React.Component {\r\n    // state\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            data: [\r\n                \"Have 15 or more characters.\",\r\n                \"Contain three of the following four types:\",\r\n                \"English uppercase character(A - Z)\",\r\n                \"English lowercase character(a - z)\",\r\n                \"Numeric(0 - 9)\",\r\n                \"Special character(!, ., ;, $, #, @)\",\r\n                \"Not contain your user name(employee id) or your first or last name.\"],\r\n            data2: [\r\n                \"Select a phrase that's easy for you to remember, and then add complexity by using spaces, numbers\",\r\n                \"and/or special characters.\",\r\n                \"Leverage dictionary words (except for words used in common passwords, like 'password').\",\r\n                \"Consider misspelling words to add complexity (for example, kidz for kids).\",\r\n                \"Avoid adjacent keyboard characters, like 'qwerty'.\",\r\n                \"Avoid using personal details, such as your social security number or birthdate.\",\r\n                \"Don't use your FNFIS password for other applications and websites, including consumer sites.\",\r\n                \"Examples (Do not use these as they are known by all employees):\",\r\n            ]\r\n        };\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: !this.state.open })\r\n    }\r\n    // end\r\n    render() {\r\n        const { classes, handlechange } = this.props;\r\n        const { open, data, data2 } = this.state;\r\n\r\n        return (\r\n            <div>\r\n\r\n                {/* Signing title */}\r\n                <Grid item xs={12} className={classes.formHeader}>\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        component=\"h2\"\r\n                        className={classes.mainHeading}\r\n                    >Problems Signing in to your account <span onClick={() => this.handleClose()}> <img\r\n                        src=\"/assets/information.svg\"\r\n                        alt=\"fis logo\"\r\n                        width=\"20px\"\r\n                        style={{ marginBottom: \"-1px\", cursor: \"pointer\" }}\r\n                    /></span></Typography>\r\n                </Grid>\r\n                {/* end */}\r\n                <Dialog open={open} onClose={() => this.handleClose()} className={classes.dialogmain}>\r\n                    <DialogTitle className={classes.dialog}>\r\n                        Password Policy <CloseIcon style={{ color: \"#0000007A\", cursor: \"pointer\" }} onClick={() => this.handleClose()} />\r\n                    </DialogTitle>\r\n                    <DialogContent className={classes.det}>\r\n                        <Typography\r\n                            className={classes.titledetails}\r\n                        >Rules - Your password must:</Typography>\r\n                        {data.map(v => {\r\n                            return <li className={classes.li}>{v}</li>\r\n                        })}\r\n                        <Typography\r\n                            className={classes.titledetails}\r\n                        >Guidance - Use a complex yet practicable password:</Typography>\r\n                        {data2.map(v => {\r\n                            return <li className={classes.li}>{v}</li>\r\n                        })}\r\n                        <p className={classes.para}>My Kidz Like 2 Swim</p>\r\n                        <p className={classes.para}>@IloveAlaska-intheSummer</p>\r\n                        <p className={classes.para}>Why would u do that!</p>\r\n                        <p className={classes.para}>If you have any questions or issues, you may contact Employee Support at: http://employeesupport.fnfis.com</p>\r\n                        <Typography\r\n                            className={classes.titledetails}\r\n                        >For assistance:</Typography>\r\n                        <p className={classes.para}>FIS Employees - Employee Support: 800.448.8625 (US); 856.470.2445 (Outside the US)</p>\r\n                        <Button variant=\"contained\" className={classes.submit}\r\n                            onClick={() => this.handleClose()}>\r\n                            {\"Close\"}</Button>\r\n                    </DialogContent>\r\n                </Dialog>\r\n                {/* reset your password form */}\r\n                <Grid container item xs={12} justify=\"center\">\r\n                    <Grid item xs={12} sm={12} md={10} lg={10} xl={10}>\r\n                        <Grid item xs={12} className={classes.form}>\r\n                            <Typography variant=\"subtitle2\" className={classes.for_newuser}>Please select your issue : </Typography>\r\n                            <Grid item xs={12} >\r\n                                <FormControlLabel\r\n                                    className={classes.for_checkbox}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked\r\n                                            //   checked={this.state.isChecked}\r\n                                            //     onChange={this.handleRememberPassword}\r\n                                            name=\"forgot_password\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"I forgot my password\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    className={classes.for_checkbox}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name=\"login_id\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"I forgot my login ID\"\r\n                                />\r\n\r\n                                <FormControlLabel\r\n                                    className={classes.for_checkbox}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name=\"account\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"I think my account is locked\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            item\r\n                            xs={12}\r\n                            className={classes.userHelpGrid}\r\n                        >\r\n                            <Typography variant=\"body1\" component=\"div\"\r\n                                className={`${classes.for_newuser} ${classes.for_resetuser}`}\r\n                            >\r\n                                To reset your password, enter your user email address, username or alias.\r\n                           </Typography>\r\n                        </Grid>\r\n                        <TextField\r\n                            className={classes.formInputs}\r\n                            //   error\r\n                            //   helperText=\"Incorrect entry.\"\r\n                            label=\"Enter your username, email ID or alias\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disableElevation\r\n                                className={classes.proceedButton}\r\n                                onClick={this.handleLogin}\r\n                            >Proceed</Button>\r\n\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                disableElevation\r\n                                className={classes.backButton}\r\n                                onClick={() => handlechange()}\r\n                            >Back to Sign in</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* end */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Forgetpassword));"]},"metadata":{},"sourceType":"module"}