{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_Crayond\\\\CardHolderUI\\\\src\\\\App.theme.js\";\nimport React from 'react';\nimport { ThemeProvider, createMuiTheme, responsiveFontSizes } from '@material-ui/core';\nimport { ThemeContext } from './contexts';\nimport { themes } from './utils';\n\nconst AppTheme = props => {\n  let [theme, setTheme] = React.useState({\n    name: themes.default\n  });\n\n  const giveMeTheme = () => {\n    let current_theme_json; //Geting the theme json for  the selected theme\n\n    switch (theme.name) {\n      case themes.default:\n        current_theme_json = require('./themes/default.json');\n        break;\n\n      default:\n        current_theme_json = require('./themes/default.json');\n        break;\n    } //Creating a Theme with json\n\n\n    let current_theme = createMuiTheme(current_theme_json); //Making theme work with responsive font size\n\n    current_theme = responsiveFontSizes(current_theme);\n    return current_theme;\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: { ...theme,\n      setTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: giveMeTheme(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.children));\n};\n\nexport default AppTheme;","map":{"version":3,"sources":["C:/Projects_Crayond/CardHolderUI/src/App.theme.js"],"names":["React","ThemeProvider","createMuiTheme","responsiveFontSizes","ThemeContext","themes","AppTheme","props","theme","setTheme","useState","name","default","giveMeTheme","current_theme_json","require","current_theme","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,mBAAxC,QAAmE,mBAAnE;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,MAAT,QAAuB,SAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe;AACnCC,IAAAA,IAAI,EAAEN,MAAM,CAACO;AADsB,GAAf,CAAxB;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIC,kBAAJ,CADsB,CAGtB;;AACA,YAAQN,KAAK,CAACG,IAAd;AACI,WAAKN,MAAM,CAACO,OAAZ;AACIE,QAAAA,kBAAkB,GAAGC,OAAO,CAAC,uBAAD,CAA5B;AACA;;AAEJ;AACID,QAAAA,kBAAkB,GAAGC,OAAO,CAAC,uBAAD,CAA5B;AACA;AAPR,KAJsB,CActB;;;AACA,QAAIC,aAAa,GAAGd,cAAc,CAACY,kBAAD,CAAlC,CAfsB,CAiBtB;;AACAE,IAAAA,aAAa,GAAGb,mBAAmB,CAACa,aAAD,CAAnC;AAEA,WAAOA,aAAP;AACH,GArBD;;AAuBA,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,EAAE,GAAGR,KAAL;AAAYC,MAAAA;AAAZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEI,WAAW,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACU,QADX,CADG,CAAP;AAMH,CAnCD;;AAqCA,eAAeX,QAAf","sourcesContent":["import React from 'react';\r\nimport { ThemeProvider, createMuiTheme, responsiveFontSizes } from '@material-ui/core';\r\n\r\nimport { ThemeContext } from './contexts';\r\nimport { themes } from './utils';\r\n\r\nconst AppTheme = (props) => {\r\n\r\n    let [theme, setTheme] = React.useState({\r\n        name: themes.default\r\n    });\r\n\r\n    const giveMeTheme = () => {\r\n        let current_theme_json;\r\n\r\n        //Geting the theme json for  the selected theme\r\n        switch (theme.name) {\r\n            case themes.default:\r\n                current_theme_json = require('./themes/default.json');\r\n                break;\r\n        \r\n            default:\r\n                current_theme_json = require('./themes/default.json');\r\n                break;\r\n        }\r\n\r\n        //Creating a Theme with json\r\n        let current_theme = createMuiTheme(current_theme_json);\r\n\r\n        //Making theme work with responsive font size\r\n        current_theme = responsiveFontSizes(current_theme);\r\n\r\n        return current_theme;\r\n    }\r\n\r\n    return <ThemeContext.Provider value={{ ...theme, setTheme }}>\r\n        <ThemeProvider theme={giveMeTheme()}>\r\n            {props.children}\r\n        </ThemeProvider>\r\n    </ThemeContext.Provider>\r\n\r\n}\r\n\r\nexport default AppTheme;"]},"metadata":{},"sourceType":"module"}