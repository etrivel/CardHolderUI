{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_Crayond\\\\CardHolderUI\\\\src\\\\screens\\\\login\\\\createpassword.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, Card, CardContent, Typography, withStyles, TextField, Grid, Button, Breadcrumbs // Link,\n, Dialog, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport DialogComponent from \"../../components/dialog/index\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nconst valerrlist = [\"currentpass\", \"pass\", \"newpass\"]; // style\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    background: theme.palette.mainbackground.default,\n    opacity: 1,\n    padding: \"30px 0px\"\n  },\n  titledetails: {\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    color: \"#012834\",\n    margin: \"14px 0px\",\n    opacity: 0.9\n  },\n  para: {\n    margin: \"14px 0px\",\n    fontSize: \"14px\",\n    fontWeight: 500,\n    marginLeft: \"20px\",\n    opacity: 0.8,\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"13px\"\n    }\n  },\n  det: {\n    padding: \"16px 80px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"16px\"\n    }\n  },\n  li: {\n    opacity: 0.8,\n    fontSize: \"14px\",\n    fontWeight: 500,\n    margin: \"14px 0px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"13px\"\n    }\n  },\n  formGrid: {\n    textAlign: \"center\"\n  },\n  formHeader: {\n    textAlign: \"center\",\n    marginBottom: 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginBottom: 40\n    }\n  },\n  formInputs: {\n    margin: \"10px 0px\",\n    width: \"100%\",\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: 10\n    }\n  },\n  userHelpGrid: {\n    margin: \"10px 0px\"\n  },\n  rememberMe: {\n    color: theme.palette.error.main,\n    fontSize: 14,\n    fontWeight: 500,\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: 6\n    }\n  },\n  forgotPassword: {\n    color: theme.palette.secondary.main,\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    margin: \"auto\",\n    \"& a\": {\n      cursor: \"unset\",\n      textDecoration: \"none\"\n    },\n    \"& .MuiTypography-body1\": {\n      fontSize: \"0.8rem !important\",\n      fontWeight: \"bold\",\n      color: theme.palette.secondary.main\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"flex-start\",\n      margin: \"auto\"\n    }\n  },\n  star: {\n    color: theme.palette.error.main\n  },\n  text_title_policy: {\n    fontSize: \"0.8rem\",\n    fontWeight: \"bold\",\n    color: \"#012834\",\n    textDecoration: \"underline\",\n    letterSpacing: 1,\n    cursor: \"pointer\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: \"52px\"\n    }\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 600\n  },\n  card: {\n    background: theme.palette.background.paper,\n    boxShadow: \"0px 5px 10px #00000014\",\n    borderRadius: 16,\n    opacity: 1,\n    margin: \"20px 0px\"\n  },\n  card_title: {\n    borderBottom: `2px solid ${theme.palette.mainbackground.default}`,\n    fontWeight: \"bold\",\n    fontSize: 14,\n    [theme.breakpoints.only(\"xs\")]: {\n      height: \"20px\"\n    }\n  },\n  text_title: {\n    padding: \"6px 0px\",\n    opacity: 0.9\n  },\n  body: {\n    padding: \"30px 0px\"\n  },\n  btns: {\n    margin: \"20px 0px\"\n  },\n  clear: {\n    boxShadow: \"0px 3px 6px #0049903D\",\n    border: `1px solid ${theme.palette.primary.main}`,\n    opacity: 0.9,\n    fontSize: 12,\n    borderRadius: 8,\n    marginRight: 12,\n    fontWeight: 600\n  },\n  submit: {\n    border: `2px solid ${theme.palette.primary.main}`,\n    background: theme.palette.primary.main,\n    boxShadow: \"0px 3px 6px #0049903D\",\n    borderRadius: 8,\n    fontSize: 12,\n    opacity: 0.9,\n    \"&:hover\": {\n      background: theme.palette.primary.main\n    }\n  },\n  d_icon: {\n    margin: \"auto\",\n    width: \"100%\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontSize: 50\n  },\n  d_title: {\n    fontSize: 16,\n    fontWeight: 600,\n    textAlign: \"center\",\n    color: theme.palette.secondary.main,\n    opacity: 0.8,\n    letterSpacing: 1,\n    paddingBottom: \"12px\"\n  },\n  dialog: {\n    opacity: 0.8,\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    \"& h2\": {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      color: \"#012834\",\n      fontWeight: 600,\n      fontSize: \"16px\"\n    }\n  },\n  dialogmain: {\n    \"& .MuiDialog-paperWidthSm\": {\n      maxWidth: \"100%\"\n    }\n  },\n  //  submit: {\n  //     border: `2px solid ${theme.palette.primary.main}`,\n  //     background: theme.palette.primary.main,\n  //     boxShadow: \"0px 3px 6px #0049903D\",\n  //     borderRadius: 4,\n  //     fontSize: 10,\n  //     float: \"right\",\n  //     opacity: 0.9,\n  //     \"&:hover\": {\n  //         background: theme.palette.primary.main,\n  //     },\n  //     [theme.breakpoints.only('xs')]: {\n  //         fontSize: 9,\n  //     }\n  // },\n  d_btn: {\n    textAlign: \"center\",\n    margin: \"auto\",\n    display: \"flex\",\n    height: \"40px\",\n    color: theme.palette.secondary.contrastText,\n    fontSize: 16,\n    textTransform: \"capitalize\",\n    fontWeight: 600,\n    boxShadow: \"0px 10px 15px #70707028\",\n    background: theme.palette.primary.main,\n    transition: \"0.5s\",\n    \"& button\": {\n      padding: 8\n    },\n    \"&:hover\": {\n      transition: \"0.5s\",\n      background: theme.palette.primary.main,\n      boxShadow: \"0px 10px 15px #70707028\",\n      opacity: 0.9\n    }\n  },\n  input: {\n    width: \"50%\",\n    [theme.breakpoints.only(\"xs\")]: {\n      width: \"100%\"\n    }\n  },\n  err: {\n    margin: \"20px 0px\",\n    padding: \"6px 8px\",\n    color: theme.palette.secondary.main,\n    textTransform: \"none\",\n    fontWeight: 600,\n    boxShadow: \"0px 10px 15px #70707028\",\n    fontSize: \"13px\",\n    background: \"#FF000012 0% 0% no-repeat padding-box\",\n    border: \" 1px solid #FF0000\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    float: \"left\",\n    \"&:hover\": {\n      background: \"#FF000012 0% 0% no-repeat padding-box\"\n    }\n  }\n}); // end\n\n\nclass Createpassword extends React.Component {\n  // state\n  constructor(props) {\n    super(props);\n\n    this.Clear = () => {\n      this.setState({\n        submit: false,\n        open: false,\n        currentpass: \"\",\n        pass: \"\",\n        newpass: \"\",\n        errdata: \"\",\n        error: {}\n      });\n    };\n\n    this.validate = () => {\n      const error = {};\n      let isValidate = true;\n      valerrlist.map(val => {\n        if (!this.state[val]) {\n          error[val] = true;\n          isValidate = false;\n\n          if (this.state[val] === 0) {\n            error[val] = false;\n            isValidate = true;\n          }\n        } else {\n          error[val] = false;\n        }\n\n        return error;\n      });\n      this.setState({\n        error: { ...error\n        }\n      });\n      return isValidate;\n    };\n\n    this.handlesubmit = async () => {\n      const state = this.state;\n\n      if (this.validate()) {\n        if (state.newpass !== state.pass) {\n          state.error[\"mismatch\"] = true;\n          this.setState({ ...state\n          });\n          return false;\n        } else {\n          // setTimeout(() => {\n          //     this.setState({ submit: false });\n          //     this.props.history.push(\"/welcome\");\n          // }, 3000);\n          const body = {\n            \"firstName\": \"kabilan\",\n            \"lastName\": \"p\",\n            \"emailAddress\": \"kabilan.p@fisglobal.com\",\n            \"loginName\": \"SAMPLEIDP\",\n            \"mobile\": \"9876545667\",\n            \"forcePasswordChange\": true,\n            \"autoGeneratePassword\": true,\n            \"sendPasswordEmailNotification\": true,\n            \"sendEmailNotification\": true,\n            \"role\": \"0\",\n            \"loginRole\": \"Regular Login\",\n            \"departments\": [{\n              \"departmentName\": \"SMYNT\",\n              \"primaryDept\": 1\n            }],\n            \"profileRegToLogins\": [{\n              \"profileRegistryName\": \"SMYNT OTP Regular\",\n              \"exclusion\": 0\n            }, {\n              \"profileRegistryName\": \"SMYNT User Access Profile\",\n              \"exclusion\": 0\n            }]\n          };\n          await axios.post(`${config.api_url}${'/api/v1/users/registerCHPUser'}`, body).then(res => {\n            this.setState({ ...state,\n              submit: true,\n              open: true\n            });\n            this.setState({\n              submit: false\n            });\n            this.props.history.push(\"/welcome\");\n          }).catch(error => {\n            this.setState({\n              errdata: error.message\n            });\n          });\n        }\n      }\n    };\n\n    this.handleChange = (n, v) => {\n      const state = this.state;\n      state.error[n] = false;\n      this.setState({ ...state,\n        [n]: v\n      });\n    };\n\n    this.handlecls = () => {\n      const state = this.state;\n      this.setState({ ...state,\n        open1: !this.state.open1\n      });\n    };\n\n    this.state = {\n      submit: false,\n      open1: false,\n      currentpass: \"\",\n      pass: \"\",\n      newpass: \"\",\n      error: {},\n      errdata: \"\",\n      open: false,\n      data: [\"Have 15 or more characters.\", \"Contain three of the following four types:\", \"English uppercase character(A - Z)\", \"English lowercase character(a - z)\", \"Numeric(0 - 9)\", \"Special character(!, ., ;, $, #, @)\", \"Not contain your user name(employee id) or your first or last name.\"],\n      data2: [\"Select a phrase that's easy for you to remember, and then add complexity by using spaces, numbers\", \"and/or special characters.\", \"Leverage dictionary words (except for words used in common passwords, like 'password').\", \"Consider misspelling words to add complexity (for example, kidz for kids).\", \"Avoid adjacent keyboard characters, like 'qwerty'.\", \"Avoid using personal details, such as your social security number or birthdate.\", \"Don't use your FNFIS password for other applications and websites, including consumer sites.\", \"Examples (Do not use these as they are known by all employees):\"]\n    };\n  } // end\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      open,\n      submit,\n      error,\n      newpass,\n      pass,\n      currentpass,\n      open1,\n      data,\n      data2,\n      errdata\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }\n    }, submit && /*#__PURE__*/React.createElement(DialogComponent, {\n      open: open,\n      handleClose: this.handleClose,\n      component: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CheckCircleOutlineIcon, {\n        className: classes.d_icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        className: classes.d_title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 37\n        }\n      }, \" \", \"User password has been successfully modified.\", \" \"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disableElevation: true,\n        className: classes.d_btn,\n        onClick: () => this.props.history.push(\"/welcome\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 37\n        }\n      }, \"Ok\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      open: open1,\n      onClose: () => this.handlecls(),\n      className: classes.dialogmain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      className: classes.dialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 25\n      }\n    }, \"Password Policy\", \" \", /*#__PURE__*/React.createElement(CloseIcon, {\n      style: {\n        color: \"#0000007A\",\n        cursor: \"pointer\"\n      },\n      onClick: () => this.handlecls(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(DialogContent, {\n      className: classes.det,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.titledetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 29\n      }\n    }, \"Rules - Your password must:\"), data.map(v => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: classes.li,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 40\n        }\n      }, v);\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.titledetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 29\n      }\n    }, \"Guidance - Use a complex yet practicable password:\"), data2.map(v => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: classes.li,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 40\n        }\n      }, v);\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 29\n      }\n    }, \"My Kidz Like 2 Swim\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 29\n      }\n    }, \"@IloveAlaska-intheSummer\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 29\n      }\n    }, \"Why would u do that!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 29\n      }\n    }, \"If you have any questions or issues, you may contact Employee Support at: http://employeesupport.fnfis.com\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.titledetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 29\n      }\n    }, \"For assistance:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.para,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 29\n      }\n    }, \"FIS Employees - Employee Support: 800.448.8625 (US); 856.470.2445 (Outside the US)\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.submit,\n      onClick: () => this.handlecls(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 29\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.card_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 25\n      }\n    }, \"Create Login ID and Password\"), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      className: classes.text_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 41\n      }\n    }, \"Login ID \", /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.star,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 54\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(TextField, {\n      onChange: e => this.handleChange(\"currentpass\", e.target.value),\n      value: currentpass,\n      fullWidth: true,\n      style: {\n        width: \"100%\"\n      },\n      helperText: error.currentpass && \"Please enter your login id\",\n      error: error.currentpass && true,\n      type: \"password\",\n      size: \"small\",\n      variant: \"outlined\",\n      placeholder: \"Login ID\",\n      className: classes.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      onClick: () => this.handlecls(),\n      variant: \"subtitle2\",\n      className: classes.text_title_policy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 41\n      }\n    }, \"Password Policy ?\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      className: classes.text_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 41\n      }\n    }, \"New Password \", /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.star,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 58\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(TextField, {\n      helperText: error.pass && \"Please enter your new password\",\n      onChange: e => this.handleChange(\"pass\", e.target.value),\n      value: pass,\n      error: error.pass && true,\n      type: \"password\",\n      size: \"small\",\n      variant: \"outlined\",\n      placeholder: \"New Password\",\n      className: classes.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      className: classes.text_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 41\n      }\n    }, \"Confirm New Password\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.star,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 45\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(TextField, {\n      helperText: this.state.error.mismatch ? \"The confirm new password is mismatched with new password\" : error.newpass && \"Please enter your confirm password\",\n      error: (error.newpass || this.state.error.mismatch) && true,\n      onChange: e => this.handleChange(\"newpass\", e.target.value),\n      value: newpass,\n      type: \"password\",\n      size: \"small\",\n      variant: \"outlined\",\n      placeholder: \"Confirm New Password\",\n      className: classes.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      className: classes.btns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 37\n      }\n    }, errdata ? /*#__PURE__*/React.createElement(Button, {\n      className: classes.err,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 45\n      }\n    }, errdata) : \"\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.clear,\n      onClick: () => this.Clear(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 41\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.submit,\n      onClick: () => this.handlesubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 41\n      }\n    }, \"Submit\"))))))));\n  }\n\n}\n\nexport default withStyles(styles)(withRouter(Createpassword));","map":{"version":3,"sources":["C:/Projects_Crayond/CardHolderUI/src/screens/login/createpassword.js"],"names":["React","withRouter","Container","Card","CardContent","Typography","withStyles","TextField","Grid","Button","Breadcrumbs","Dialog","DialogTitle","DialogContent","DialogComponent","CheckCircleOutlineIcon","NavigateNextIcon","CloseIcon","axios","config","valerrlist","styles","theme","root","width","background","palette","mainbackground","default","opacity","padding","titledetails","fontSize","fontWeight","color","margin","para","marginLeft","breakpoints","down","det","li","formGrid","textAlign","formHeader","marginBottom","formInputs","borderRadius","userHelpGrid","rememberMe","error","main","forgotPassword","secondary","display","justifyContent","cursor","textDecoration","star","text_title_policy","letterSpacing","up","marginTop","title","card","paper","boxShadow","card_title","borderBottom","only","height","text_title","body","btns","clear","border","primary","marginRight","submit","d_icon","d_title","paddingBottom","dialog","alignItems","dialogmain","maxWidth","d_btn","contrastText","textTransform","transition","input","err","float","Createpassword","Component","constructor","props","Clear","setState","open","currentpass","pass","newpass","errdata","validate","isValidate","map","val","state","handlesubmit","post","api_url","then","res","history","push","catch","message","handleChange","n","v","handlecls","open1","data","data2","render","classes","handleClose","e","target","value","mismatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    Container,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    withStyles,\r\n    TextField,\r\n    Grid,\r\n    Button,\r\n    Breadcrumbs,\r\n    // Link,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n} from \"@material-ui/core\";\r\nimport DialogComponent from \"../../components/dialog/index\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nconst valerrlist = [\"currentpass\", \"pass\", \"newpass\"];\r\n// style\r\nconst styles = (theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        background: theme.palette.mainbackground.default,\r\n        opacity: 1,\r\n        padding: \"30px 0px\",\r\n    },\r\n    titledetails: {\r\n        fontSize: \"1rem\",\r\n        fontWeight: \"bold\",\r\n        color: \"#012834\",\r\n        margin: \"14px 0px\",\r\n        opacity: 0.9,\r\n    },\r\n    para: {\r\n        margin: \"14px 0px\",\r\n        fontSize: \"14px\",\r\n        fontWeight: 500,\r\n        marginLeft: \"20px\",\r\n        opacity: 0.8,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"13px\",\r\n        },\r\n    },\r\n    det: {\r\n        padding: \"16px 80px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            padding: \"16px\",\r\n        },\r\n    },\r\n    li: {\r\n        opacity: 0.8,\r\n        fontSize: \"14px\",\r\n        fontWeight: 500,\r\n        margin: \"14px 0px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \"13px\",\r\n        },\r\n    },\r\n    formGrid: {\r\n        textAlign: \"center\",\r\n    },\r\n    formHeader: {\r\n        textAlign: \"center\",\r\n        marginBottom: 40,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginBottom: 40,\r\n        },\r\n    },\r\n    formInputs: {\r\n        margin: \"10px 0px\",\r\n        width: \"100%\",\r\n        \"& .MuiOutlinedInput-root\": {\r\n            borderRadius: 10,\r\n        },\r\n    },\r\n    userHelpGrid: {\r\n        margin: \"10px 0px\",\r\n    },\r\n    rememberMe: {\r\n        color: theme.palette.error.main,\r\n        fontSize: 14,\r\n        fontWeight: 500,\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            marginBottom: 6,\r\n        },\r\n    },\r\n    forgotPassword: {\r\n        color: theme.palette.secondary.main,\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        margin: \"auto\",\r\n        \"& a\": {\r\n            cursor: \"unset\",\r\n            textDecoration: \"none\",\r\n        },\r\n        \"& .MuiTypography-body1\": {\r\n            fontSize: \"0.8rem !important\",\r\n            fontWeight: \"bold\",\r\n            color: theme.palette.secondary.main,\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            justifyContent: \"flex-start\",\r\n            margin: \"auto\",\r\n        },\r\n    },\r\n    star: {\r\n        color: theme.palette.error.main,\r\n    },\r\n    text_title_policy: {\r\n        fontSize: \"0.8rem\",\r\n        fontWeight: \"bold\",\r\n        color: \"#012834\",\r\n        textDecoration: \"underline\",\r\n        letterSpacing: 1,\r\n        cursor: \"pointer\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginTop: \"52px\",\r\n        },\r\n    },\r\n\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: 600,\r\n    },\r\n    card: {\r\n        background: theme.palette.background.paper,\r\n        boxShadow: \"0px 5px 10px #00000014\",\r\n        borderRadius: 16,\r\n        opacity: 1,\r\n        margin: \"20px 0px\",\r\n    },\r\n    card_title: {\r\n        borderBottom: `2px solid ${theme.palette.mainbackground.default}`,\r\n        fontWeight: \"bold\",\r\n        fontSize: 14,\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            height: \"20px\",\r\n        },\r\n    },\r\n    text_title: {\r\n        padding: \"6px 0px\",\r\n        opacity: 0.9,\r\n    },\r\n    body: {\r\n        padding: \"30px 0px\",\r\n    },\r\n    btns: {\r\n        margin: \"20px 0px\",\r\n    },\r\n    clear: {\r\n        boxShadow: \"0px 3px 6px #0049903D\",\r\n        border: `1px solid ${theme.palette.primary.main}`,\r\n        opacity: 0.9,\r\n        fontSize: 12,\r\n        borderRadius: 8,\r\n        marginRight: 12,\r\n        fontWeight: 600,\r\n    },\r\n    submit: {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n        background: theme.palette.primary.main,\r\n        boxShadow: \"0px 3px 6px #0049903D\",\r\n        borderRadius: 8,\r\n        fontSize: 12,\r\n        opacity: 0.9,\r\n        \"&:hover\": {\r\n            background: theme.palette.primary.main,\r\n        },\r\n    },\r\n    d_icon: {\r\n        margin: \"auto\",\r\n        width: \"100%\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\",\r\n        color: theme.palette.primary.main,\r\n        fontSize: 50,\r\n    },\r\n    d_title: {\r\n        fontSize: 16,\r\n        fontWeight: 600,\r\n        textAlign: \"center\",\r\n        color: theme.palette.secondary.main,\r\n        opacity: 0.8,\r\n        letterSpacing: 1,\r\n        paddingBottom: \"12px\",\r\n    },\r\n    dialog: {\r\n        opacity: 0.8,\r\n        borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n        \"& h2\": {\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            color: \"#012834\",\r\n            fontWeight: 600,\r\n            fontSize: \"16px\",\r\n        },\r\n    },\r\n    dialogmain: {\r\n        \"& .MuiDialog-paperWidthSm\": {\r\n            maxWidth: \"100%\",\r\n        },\r\n    },\r\n    //  submit: {\r\n    //     border: `2px solid ${theme.palette.primary.main}`,\r\n    //     background: theme.palette.primary.main,\r\n    //     boxShadow: \"0px 3px 6px #0049903D\",\r\n    //     borderRadius: 4,\r\n    //     fontSize: 10,\r\n    //     float: \"right\",\r\n    //     opacity: 0.9,\r\n    //     \"&:hover\": {\r\n    //         background: theme.palette.primary.main,\r\n    //     },\r\n    //     [theme.breakpoints.only('xs')]: {\r\n    //         fontSize: 9,\r\n    //     }\r\n    // },\r\n    d_btn: {\r\n        textAlign: \"center\",\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        height: \"40px\",\r\n        color: theme.palette.secondary.contrastText,\r\n        fontSize: 16,\r\n        textTransform: \"capitalize\",\r\n        fontWeight: 600,\r\n        boxShadow: \"0px 10px 15px #70707028\",\r\n        background: theme.palette.primary.main,\r\n        transition: \"0.5s\",\r\n        \"& button\": {\r\n            padding: 8,\r\n        },\r\n        \"&:hover\": {\r\n            transition: \"0.5s\",\r\n            background: theme.palette.primary.main,\r\n            boxShadow: \"0px 10px 15px #70707028\",\r\n            opacity: 0.9,\r\n        },\r\n    },\r\n    input: {\r\n        width: \"50%\",\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            width: \"100%\",\r\n        },\r\n    }, err: {\r\n        margin: \"20px 0px\",\r\n        padding: \"6px 8px\",\r\n        color: theme.palette.secondary.main,\r\n        textTransform: \"none\",\r\n        fontWeight: 600,\r\n        boxShadow: \"0px 10px 15px #70707028\",\r\n        fontSize: \"13px\",\r\n        background: \"#FF000012 0% 0% no-repeat padding-box\",\r\n        border: \" 1px solid #FF0000\",\r\n        borderRadius: \"8px\",\r\n        opacity: 1,\r\n        float: \"left\",\r\n        \"&:hover\": {\r\n            background: \"#FF000012 0% 0% no-repeat padding-box\",\r\n        },\r\n    },\r\n});\r\n// end\r\n\r\nclass Createpassword extends React.Component {\r\n    // state\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            submit: false,\r\n            open1: false,\r\n            currentpass: \"\",\r\n            pass: \"\",\r\n            newpass: \"\",\r\n            error: {},\r\n            errdata: \"\",\r\n            open: false,\r\n            data: [\r\n                \"Have 15 or more characters.\",\r\n                \"Contain three of the following four types:\",\r\n                \"English uppercase character(A - Z)\",\r\n                \"English lowercase character(a - z)\",\r\n                \"Numeric(0 - 9)\",\r\n                \"Special character(!, ., ;, $, #, @)\",\r\n                \"Not contain your user name(employee id) or your first or last name.\",\r\n            ],\r\n            data2: [\r\n                \"Select a phrase that's easy for you to remember, and then add complexity by using spaces, numbers\",\r\n                \"and/or special characters.\",\r\n                \"Leverage dictionary words (except for words used in common passwords, like 'password').\",\r\n                \"Consider misspelling words to add complexity (for example, kidz for kids).\",\r\n                \"Avoid adjacent keyboard characters, like 'qwerty'.\",\r\n                \"Avoid using personal details, such as your social security number or birthdate.\",\r\n                \"Don't use your FNFIS password for other applications and websites, including consumer sites.\",\r\n                \"Examples (Do not use these as they are known by all employees):\",\r\n            ],\r\n        };\r\n    }\r\n    // end\r\n    Clear = () => {\r\n        this.setState({\r\n            submit: false,\r\n            open: false,\r\n            currentpass: \"\",\r\n            pass: \"\",\r\n            newpass: \"\",\r\n            errdata: \"\",\r\n            error: {},\r\n        });\r\n    };\r\n    validate = () => {\r\n        const error = {};\r\n        let isValidate = true;\r\n        valerrlist.map((val) => {\r\n            if (!this.state[val]) {\r\n                error[val] = true;\r\n                isValidate = false;\r\n                if (this.state[val] === 0) {\r\n                    error[val] = false;\r\n                    isValidate = true;\r\n                }\r\n            } else {\r\n                error[val] = false;\r\n            }\r\n            return error;\r\n        });\r\n        this.setState({ error: { ...error } });\r\n        return isValidate;\r\n    };\r\n    // handle submit funcy\r\n    handlesubmit = async () => {\r\n        const state = this.state;\r\n        if (this.validate()) {\r\n            if (state.newpass !== state.pass) {\r\n                state.error[\"mismatch\"] = true;\r\n                this.setState({ ...state });\r\n                return false;\r\n            } else {\r\n                // setTimeout(() => {\r\n                //     this.setState({ submit: false });\r\n                //     this.props.history.push(\"/welcome\");\r\n                // }, 3000);\r\n                const body = {\r\n                    \"firstName\": \"kabilan\",\r\n                    \"lastName\": \"p\",\r\n                    \"emailAddress\": \"kabilan.p@fisglobal.com\",\r\n                    \"loginName\": \"SAMPLEIDP\",\r\n                    \"mobile\": \"9876545667\",\r\n                    \"forcePasswordChange\": true,\r\n                    \"autoGeneratePassword\": true,\r\n                    \"sendPasswordEmailNotification\": true,\r\n                    \"sendEmailNotification\": true,\r\n                    \"role\": \"0\",\r\n                    \"loginRole\": \"Regular Login\",\r\n                    \"departments\": [\r\n                        {\r\n                            \"departmentName\": \"SMYNT\",\r\n                            \"primaryDept\": 1\r\n                        }\r\n                    ],\r\n                    \"profileRegToLogins\": [\r\n                        {\r\n                            \"profileRegistryName\": \"SMYNT OTP Regular\",\r\n                            \"exclusion\": 0\r\n                        },\r\n                        {\r\n                            \"profileRegistryName\": \"SMYNT User Access Profile\",\r\n                            \"exclusion\": 0\r\n                        }\r\n                    ]\r\n                }\r\n\r\n                await axios\r\n                    .post(`${config.api_url}${'/api/v1/users/registerCHPUser'}`, body)\r\n                    .then((res) => {\r\n                        this.setState({ ...state, submit: true, open: true });\r\n                        this.setState({ submit: false });\r\n                        this.props.history.push(\"/welcome\");\r\n                    })\r\n                    .catch((error) => {\r\n                        this.setState({\r\n                            errdata: error.message,\r\n                        });\r\n                    });\r\n            }\r\n        }\r\n    };\r\n    // end\r\n    handleChange = (n, v) => {\r\n        const state = this.state;\r\n        state.error[n] = false;\r\n        this.setState({\r\n            ...state,\r\n            [n]: v,\r\n        });\r\n    };\r\n    handlecls = () => {\r\n        const state = this.state;\r\n        this.setState({\r\n            ...state,\r\n            open1: !this.state.open1,\r\n        });\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const {\r\n            open,\r\n            submit,\r\n            error,\r\n            newpass,\r\n            pass,\r\n            currentpass,\r\n            open1,\r\n            data,\r\n            data2,\r\n            errdata\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Container>\r\n                    {/* dialogbox component */}\r\n                    {submit && (\r\n                        <DialogComponent\r\n                            open={open}\r\n                            handleClose={this.handleClose}\r\n                            component={\r\n                                <div>\r\n                                    <CheckCircleOutlineIcon className={classes.d_icon} />\r\n                                    <Typography variant=\"subtitle2\" className={classes.d_title}>\r\n                                        {\" \"}\r\n                                        User password has been successfully modified.{\" \"}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disableElevation\r\n                                        className={classes.d_btn}\r\n                                        onClick={() => this.props.history.push(\"/welcome\")}\r\n                                    >\r\n                                        Ok\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                        />\r\n                    )}\r\n                    {/* end */}\r\n                    <Dialog\r\n                        open={open1}\r\n                        onClose={() => this.handlecls()}\r\n                        className={classes.dialogmain}\r\n                    >\r\n                        <DialogTitle className={classes.dialog}>\r\n                            Password Policy{\" \"}\r\n                            <CloseIcon\r\n                                style={{ color: \"#0000007A\", cursor: \"pointer\" }}\r\n                                onClick={() => this.handlecls()}\r\n                            />\r\n                        </DialogTitle>\r\n                        <DialogContent className={classes.det}>\r\n                            <Typography className={classes.titledetails}>\r\n                                Rules - Your password must:\r\n                            </Typography>\r\n                            {data.map((v) => {\r\n                                return <li className={classes.li}>{v}</li>;\r\n                            })}\r\n                            <Typography className={classes.titledetails}>\r\n                                Guidance - Use a complex yet practicable password:\r\n                            </Typography>\r\n                            {data2.map((v) => {\r\n                                return <li className={classes.li}>{v}</li>;\r\n                            })}\r\n                            <p className={classes.para}>My Kidz Like 2 Swim</p>\r\n                            <p className={classes.para}>@IloveAlaska-intheSummer</p>\r\n                            <p className={classes.para}>Why would u do that!</p>\r\n                            <p className={classes.para}>\r\n                                If you have any questions or issues, you may contact Employee\r\n                                Support at: http://employeesupport.fnfis.com\r\n                            </p>\r\n                            <Typography className={classes.titledetails}>\r\n                                For assistance:\r\n                            </Typography>\r\n                            <p className={classes.para}>\r\n                                FIS Employees - Employee Support: 800.448.8625 (US);\r\n                                856.470.2445 (Outside the US)\r\n                            </p>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                                onClick={() => this.handlecls()}\r\n                            >\r\n                                {\"Close\"}\r\n                            </Button>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                    {/* card component */}\r\n                    {/* <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />}>\r\n            <Typography className={classes.title}>My Account </Typography>\r\n            <Typography color=\"textPrimary\" className={classes.title}>\r\n              Change Password{\" \"}\r\n            </Typography>\r\n          </Breadcrumbs> */}\r\n                    {/* end */}\r\n\r\n                    {/* card component */}\r\n                    <Card className={classes.card} variant=\"outlined\">\r\n                        <CardContent className={classes.card_title}>\r\n                            Create Login ID and Password\r\n                        </CardContent>\r\n\r\n                        <Container>\r\n                            <div className={classes.body}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <Typography\r\n                                            variant=\"subtitle2\"\r\n                                            className={classes.text_title}\r\n                                        >\r\n                                            Login ID <span className={classes.star}>*</span>\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            onChange={(e) =>\r\n                                                this.handleChange(\"currentpass\", e.target.value)\r\n                                            }\r\n                                            value={currentpass}\r\n                                            fullWidth={true}\r\n                                            style={{ width: \"100%\" }}\r\n                                            helperText={\r\n                                                error.currentpass &&\r\n                                                \"Please enter your login id\"\r\n                                            }\r\n                                            error={error.currentpass && true}\r\n                                            type=\"password\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            placeholder=\"Login ID\"\r\n                                            className={classes.input}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <Typography\r\n                                            onClick={() => this.handlecls()}\r\n                                            variant=\"subtitle2\"\r\n                                            className={classes.text_title_policy}\r\n                                        >\r\n                                            Password Policy ?\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant=\"subtitle2\"\r\n                                            className={classes.text_title}\r\n                                        >\r\n                                            New Password <span className={classes.star}>*</span>\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            helperText={\r\n                                                error.pass && \"Please enter your new password\"\r\n                                            }\r\n                                            onChange={(e) =>\r\n                                                this.handleChange(\"pass\", e.target.value)\r\n                                            }\r\n                                            value={pass}\r\n                                            error={error.pass && true}\r\n                                            type=\"password\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            placeholder=\"New Password\"\r\n                                            className={classes.input}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant=\"subtitle2\"\r\n                                            className={classes.text_title}\r\n                                        >\r\n                                            Confirm New Password{\" \"}\r\n                                            <span className={classes.star}>*</span>\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            helperText={\r\n                                                this.state.error.mismatch\r\n                                                    ? \"The confirm new password is mismatched with new password\"\r\n                                                    : error.newpass &&\r\n                                                    \"Please enter your confirm password\"\r\n                                            }\r\n                                            error={\r\n                                                (error.newpass || this.state.error.mismatch) && true\r\n                                            }\r\n                                            onChange={(e) =>\r\n                                                this.handleChange(\"newpass\", e.target.value)\r\n                                            }\r\n                                            value={newpass}\r\n                                            type=\"password\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            placeholder=\"Confirm New Password\"\r\n                                            className={classes.input}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justify=\"space-between\"\r\n                                    alignItems=\"center\"\r\n                                    className={classes.btns}\r\n                                >\r\n                                    <Grid item>\r\n                                        {errdata ? (\r\n                                            <Button className={classes.err}>{errdata}</Button>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            className={classes.clear}\r\n                                            onClick={() => this.Clear()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            className={classes.submit}\r\n                                            onClick={() => this.handlesubmit()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </Container>\r\n                    </Card>\r\n                    {/* end */}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Createpassword));\r\n"]},"metadata":{},"sourceType":"module"}