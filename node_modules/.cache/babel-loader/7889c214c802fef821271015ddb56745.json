{"ast":null,"code":"var _jsxFileName = \"C:\\\\Office Work\\\\FIS\\\\CardHolderUI\\\\src\\\\components\\\\checkbox\\\\index1.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useHistory } from \"react-router-dom\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 15\n  }\n})));\nexport default function CheckboxLabels() {\n  let history = useHistory();\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    debugger;\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    history.push({\n      state: {\n        name: event\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      checked: state.checkedG,\n      onChange: handleChange,\n      name: \"checkedG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    }),\n    label: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Office Work/FIS/CardHolderUI/src/components/checkbox/index1.js"],"names":["React","withStyles","green","FormControlLabel","Checkbox","useHistory","GreenCheckbox","root","color","checked","props","CheckboxLabels","history","state","setState","useState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,aAAa,GAAGL,UAAU,CAAC;AAC/BM,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEN,KAAK,CAAC,GAAD,CADR;AAEJ,iBAAa;AACXM,MAAAA,KAAK,EAAEN,KAAK,CAAC,GAAD;AADD;AAFT,GADyB;AAO/BO,EAAAA,OAAO,EAAE;AAPsB,CAAD,CAAV,CAQlBC,KAAD,iBAAW,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAC;AAAhB,GAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GARQ,CAAtB;AAUA,eAAe,SAASC,cAAT,GAA0B;AACvC,MAAIC,OAAO,GAAGP,UAAU,EAAxB;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACe,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE,IAD6B;AAEvCC,IAAAA,QAAQ,EAAE,IAF6B;AAGvCC,IAAAA,QAAQ,EAAE,IAH6B;AAIvCC,IAAAA,QAAQ,EAAE;AAJ6B,GAAf,CAA1B;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACAP,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAab;AAA9C,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACY,IAAR,CAAa;AACXX,MAAAA,KAAK,EAAE;AACLU,QAAAA,IAAI,EAAEF;AADD;AADI,KAAb;AAMD,GATD;;AAWA,sBAEE,oBAAC,gBAAD;AACE,IAAA,OAAO,eAAE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAER,KAAK,CAACM,QAA9B;AAAwC,MAAA,QAAQ,EAAEC,YAAlD;AAAgE,MAAA,IAAI,EAAC,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX;AAEE,IAAA,KAAK,EAAC,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAUD","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function CheckboxLabels() {\r\n  let history = useHistory();\r\n\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    debugger\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    history.push({\r\n      state: {\r\n        name: event\r\n      },\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <FormControlLabel\r\n      control={<GreenCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\r\n      label=\"\"\r\n    />\r\n\r\n\r\n\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}